// KQL samples - Outgoing Web Service Requests 

// Use renames in the project operator if you don't need to filter on the columns extracted from customDimensions
// move columns up to the extend operator and add a tostring function call if you need to filter or summarize on it

// Outgoing Web Service Requests from AL HttpClient (RAW data)
traces
| where timestamp > ago(60d) // change if your retention policy is different than the default
    and customDimensions.eventId == 'RT0019'
| project eventId = customDimensions.eventId 
, aadID = customDimensions.aadTenantId
, environmentName = customDimensions.environmentName
, environmentType = customDimensions.environmentType
, companyName = customDimensions.companyName
, alAuthenticationMethod = customDimensions.alAuthenticationMethod
, alHttpTimeout = customDimensions.alHttpTimeout
, alObjectId = customDimensions.alObjectId
, alObjectName = customDimensions.alObjectName
, alObjectType = customDimensions.alObjectType
, endpoint = customDimensions.endpoint
, extensionId = customDimensions.extensionId
, extensionName = customDimensions.extensionName
, extensionVersion = customDimensions.extensionVersion
, httpMethod = toupper( customDimensions.httpMethod ) // httpMethod is logged as the value used in the AL code
// httpReturnCode was deprecated in version 17.2. Use httpStatusCode instead 
, httpStatusCode = case( isnotempty(customDimensions.httpStatusCode), customDimensions.httpStatusCode, customDimensions.httpReturnCode ) 
, httpHeaders = customDimensions.httpHeaders       
, executionTime = customDimensions.serverExecutionTime
, executionTimeInMS = toreal(totimespan(customDimensions.serverExecutionTime))/10000 //the datatype for executionTime is timespan
, usertelemetryId = case(
  // user telemetry id was introduced in the platform in version 20.0
  toint( substring(customDimensions.componentVersion,0,2)) >= 20, user_Id
, 'N/A'
)
// these three lines httpHeadersTmp, httpHeadersJSON, and msUserAgent 
// illustrate how to extract data from the httpHeaders dimension
| extend httpHeadersTmp =  tostring( customDimensions.httpHeaders)
| extend httpHeadersJSON = parse_json(httpHeadersTmp)
| extend msUserAgent = tostring( httpHeadersJSON.['ms-dyn-useragent'] )


