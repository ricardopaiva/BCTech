// KQL samples - Job Queue

// Job queue entry enqueued (raw data)
traces
| where timestamp > ago(60d) // adjust as needed
    and customDimensions.eventId == 'AL0000E24'
| project timestamp
, aadTenantId = customDimensions.aadTenantId
, environmentName = customDimensions.environmentName
, environmentType = customDimensions.environmentType
, alJobQueueId = customDimensions.alJobQueueId 	
, alJobQueueIsRecurring = customDimensions.alJobQueueIsRecurring 	
, alJobQueueObjectId = customDimensions.alJobQueueObjectId 	
, alJobQueueObjectType = customDimensions.alJobQueueObjectType
, alJobQueueStatus = customDimensions.alJobQueueStatus


// Job queue entry started (raw data)
traces
| where timestamp > ago(60d) // adjust as needed
    and customDimensions.eventId == 'AL0000E25'
| project timestamp
, aadTenantId = customDimensions.aadTenantId
, environmentName = customDimensions.environmentName
, environmentType = customDimensions.environmentType
, alJobQueueId = customDimensions.alJobQueueId 	
, alJobQueueObjectId = customDimensions.alJobQueueObjectId 	
, alJobQueueObjectType = customDimensions.alJobQueueObjectType
, alJobQueueStatus = customDimensions.alJobQueueStatus


// Job queue entry finished (raw data)
traces
| where timestamp > ago(60d) // adjust as needed
    and customDimensions.eventId == 'AL0000E26'
| project timestamp
, aadTenantId = customDimensions.aadTenantId
, environmentName = customDimensions.environmentName
, environmentType = customDimensions.environmentType
, alJobQueueId = customDimensions.alJobQueueId 	
, alJobQueueObjectId = customDimensions.alJobQueueObjectId 	
, alJobQueueObjectType = customDimensions.alJobQueueObjectType
, alJobQueueStatus = customDimensions.alJobQueueStatus
, alJobQueueExecutionTimeInMs = customDimensions.alJobQueueExecutionTimeInMs
, alJobQueueStatus = iff( isempty(customDimensions.alJobQueueStatus), customDimensions.alJobQueueResult, customDimensions.alJobQueueStatus )
// , alJobQueueStatus = customDimensions.alJobQueueResult // prior to 20.0
// , alJobQueueStatus = customDimensions.alJobQueueStatus // 20.0 or later
 

// Job queue entry failed (raw data)
traces
| where timestamp > ago(60d) // adjust as needed
    and customDimensions.eventId == 'AL0000HE7'
| project timestamp
, aadTenantId = customDimensions.aadTenantId
, environmentName = customDimensions.environmentName
, environmentType = customDimensions.environmentType
, alJobQueueId = customDimensions.alJobQueueId 	
, alJobQueueObjectId = customDimensions.alJobQueueObjectId 	
, alJobQueueObjectType = customDimensions.alJobQueueObjectType
, alJobQueueStatus = customDimensions.alJobQueueStatus
, alJobQueueExecutionTimeInMs = customDimensions.alJobQueueExecutionTimeInMs
, alJobQueueStacktrace = customDimensions.alJobQueueStacktrace // stack trace added in 20.5
, taskId = customDimensions.alJobQueueScheduledTaskId // you can join to task scheduler telemetry on the taskId


// join job queue telemetry with task scheduler telemetry to learn more about the root cause of the error
let job_queue_errors = 
traces
| where timestamp >= ago(30d) // adjust as needed
| where customDimensions.eventId == 'AL0000HE7'
| where isnotempty(customDimensions.aadTenantId) // filter away signal from Docker sandboxes
| extend 
  AadTenantId = tostring( customDimensions.aadTenantId )
, EnvironmentName = tostring( customDimensions.environmentName )
, EnvironmentType = tostring( customDimensions.environmentType )
, ObjectId = toint(customDimensions.alJobQueueObjectId)
| extend TenantId = strcat( toupper(AadTenantId), toupper(EnvironmentName) )
| project timestamp
, AadTenantId, EnvironmentName, EnvironmentType, TenantId
, PlatformVersion = tostring( customDimensions.componentVersion )
, ObjectId
, ObjectType = customDimensions.alJobQueueObjectType
, CodeOwnershipKey = case(
      ObjectId between (50000 .. 99999), 'ENVIRONMENT'
    , ObjectId between (1000000 .. 69999999), 'ISV_ONPREM'
    , ObjectId between (70000000 .. 74999999), 'ISV_ONLINE'
    , 'MICROSOFT'
)
, TaskId = tostring( customDimensions.alJobQueueScheduledTaskId )
, ALStacktrace = customDimensions.alJobQueueStacktrace
;
let task_scheduler_errors = 
traces
| where timestamp >= ago(30d) // adjust as needed
| where customDimensions.eventId == 'LC0045'
| project TaskId = tostring( customDimensions.taskId )
, exception = customDimensions.failureReason
, retryMessage = tostring( customDimensions.retryMessage )
| extend exceptionIsRetriable = case (
    retryMessage has 'Exception is not retriable', false
  , retryMessage has 'Exception is retriable', true
  , false
)
| project-away retryMessage 
;
job_queue_errors
| join kind=leftouter task_scheduler_errors on $left.TaskId == $right.TaskId
| project-away TaskId, TaskId1